{"ast":null,"code":"var _jsxFileName = \"/Users/ansh/Documents/projects/workspace/personal/asd-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport StockChart from './components/StockChart';\nimport StockInput from './components/StockInput';\nimport WishlistPage from './components/WishlistPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [stocks, setStocks] = useState([]);\n  const [accuracyScore, setAccuracyScore] = useState(null);\n  const [predictedPrice, setPredictedPrice] = useState(null);\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const handleAddStock = async stockName => {\n    try {\n      // Start loading\n      setLoading(true);\n\n      // Fetch the new stock data\n      const response = await fetch(`https://hackfin-api.lookaway.dev/data/${stockName}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch data for ${stockName}`);\n      }\n      const result = await response.json();\n      const rawData = result.data;\n\n      // Format the data for the chart\n      const formattedData = Object.entries(rawData).map(([date, values]) => ({\n        date,\n        close: values.close\n      }));\n\n      // Update chart data and stocks state\n      setChartData(formattedData);\n      setStocks(prevStocks => [...prevStocks, {\n        name: stockName,\n        chartData: formattedData\n      }]);\n\n      // Fetch prediction and accuracy data with a retry mechanism\n      const fetchPrediction = async retries => {\n        try {\n          const predictionResponse = await fetch(`https://hackfin-api.lookaway.dev/predict/${stockName}`);\n          if (!predictionResponse.ok) {\n            throw new Error(`Failed to fetch prediction data for ${stockName}`);\n          }\n          const predictionResult = await predictionResponse.json();\n\n          // Update accuracy and predicted price\n          const accuracy = predictionResult.accuracy * 100;\n          const predictedPrice = predictionResult.prediction[0];\n          setAccuracyScore(accuracy.toFixed(2));\n          setPredictedPrice(predictedPrice.toFixed(2));\n          setLoading(false); // End loading\n        } catch (error) {\n          if (retries > 0) {\n            setTimeout(() => fetchPrediction(retries - 1), 3000); // Retry after 3 seconds\n          } else {\n            console.error(\"Error fetching prediction data:\", error);\n            setLoading(false); // End loading if all retries fail\n          }\n        }\n      };\n\n      // Attempt to fetch prediction data with up to 3 retries\n      fetchPrediction(3);\n    } catch (error) {\n      console.error(\"Error fetching stock data:\", error);\n      setLoading(false); // End loading on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Stock Performance Predictor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StockInput, {\n            onAddStock: handleAddStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Loading prediction data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [accuracyScore !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Model Accuracy: \", accuracyScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), predictedPrice !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Predicted Price in 30 Days: $\", predictedPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/wishlist\",\n            children: \"View Wishlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: chartData.length > 0 ? /*#__PURE__*/_jsxDEV(StockChart, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No chart data available. Please add a stock.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/wishlist\",\n          element: /*#__PURE__*/_jsxDEV(WishlistPage, {\n            stocks: stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"phZKVxdU/ATVn35T/WzBFjR6Rfs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","StockChart","StockInput","WishlistPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chartData","setChartData","stocks","setStocks","accuracyScore","setAccuracyScore","predictedPrice","setPredictedPrice","loading","setLoading","handleAddStock","stockName","response","fetch","ok","Error","result","json","rawData","data","formattedData","Object","entries","map","date","values","close","prevStocks","name","fetchPrediction","retries","predictionResponse","predictionResult","accuracy","prediction","toFixed","error","setTimeout","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onAddStock","to","length","path","element","_c","$RefreshReg$"],"sources":["/Users/ansh/Documents/projects/workspace/personal/asd-1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport StockChart from './components/StockChart';\nimport StockInput from './components/StockInput';\nimport WishlistPage from './components/WishlistPage';\nimport './App.css';\n\nconst App = () => {\n    const [chartData, setChartData] = useState([]);\n    const [stocks, setStocks] = useState([]);\n    const [accuracyScore, setAccuracyScore] = useState(null);\n    const [predictedPrice, setPredictedPrice] = useState(null);\n    const [loading, setLoading] = useState(false); // New loading state\n\n    const handleAddStock = async (stockName) => {\n        try {\n            // Start loading\n            setLoading(true);\n\n            // Fetch the new stock data\n            const response = await fetch(`https://hackfin-api.lookaway.dev/data/${stockName}`);\n            if (!response.ok) {\n                throw new Error(`Failed to fetch data for ${stockName}`);\n            }\n            const result = await response.json();\n            const rawData = result.data;\n\n            // Format the data for the chart\n            const formattedData = Object.entries(rawData).map(([date, values]) => ({\n                date,\n                close: values.close,\n            }));\n\n            // Update chart data and stocks state\n            setChartData(formattedData);\n            setStocks(prevStocks => [...prevStocks, { name: stockName, chartData: formattedData }]);\n\n            // Fetch prediction and accuracy data with a retry mechanism\n            const fetchPrediction = async (retries) => {\n                try {\n                    const predictionResponse = await fetch(`https://hackfin-api.lookaway.dev/predict/${stockName}`);\n                    if (!predictionResponse.ok) {\n                        throw new Error(`Failed to fetch prediction data for ${stockName}`);\n                    }\n                    const predictionResult = await predictionResponse.json();\n\n                    // Update accuracy and predicted price\n                    const accuracy = predictionResult.accuracy * 100;\n                    const predictedPrice = predictionResult.prediction[0];\n\n                    setAccuracyScore(accuracy.toFixed(2));\n                    setPredictedPrice(predictedPrice.toFixed(2));\n                    setLoading(false); // End loading\n                } catch (error) {\n                    if (retries > 0) {\n                        setTimeout(() => fetchPrediction(retries - 1), 3000); // Retry after 3 seconds\n                    } else {\n                        console.error(\"Error fetching prediction data:\", error);\n                        setLoading(false); // End loading if all retries fail\n                    }\n                }\n            };\n\n            // Attempt to fetch prediction data with up to 3 retries\n            fetchPrediction(3);\n        } catch (error) {\n            console.error(\"Error fetching stock data:\", error);\n            setLoading(false); // End loading on error\n        }\n    };\n\n    return (\n        <Router>\n            <div className=\"container\">\n                <div className=\"content\">\n                    <div className=\"text-section\">\n                        <h1>Stock Performance Predictor</h1>\n                        <StockInput onAddStock={handleAddStock} />\n                        {loading ? (\n                            <h3>Loading prediction data...</h3>\n                        ) : (\n                            <>\n                                {accuracyScore !== null && (\n                                    <h3>Model Accuracy: {accuracyScore}%</h3>\n                                )}\n                                {predictedPrice !== null && (\n                                    <h3>Predicted Price in 30 Days: ${predictedPrice}</h3>\n                                )}\n                            </>\n                        )}\n                        <Link to=\"/wishlist\">View Wishlist</Link>\n                    </div>\n                    <div className=\"chart-section\">\n                        {chartData.length > 0 ? (\n                            <StockChart data={chartData} />\n                        ) : (\n                            <p>No chart data available. Please add a stock.</p>\n                        )}\n                    </div>\n                </div>\n                <Routes>\n                    <Route path=\"/wishlist\" element={<WishlistPage stocks={stocks} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}