{"ast":null,"code":"var _jsxFileName = \"/Users/ansh/Documents/projects/workspace/personal/asd-1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport StockChart from './components/StockChart'; // Ensure this path is correct\nimport StockInput from './components/StockInput'; // Import your StockInput component\nimport WishlistPage from './components/WishlistPage'; // Import your WishlistPage component\nimport './App.css'; // Import your custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [stocks, setStocks] = useState([]); // State for the watchlist\n  const [accuracyScore, setAccuracyScore] = useState(null); // State for accuracy score\n  const [predictedPrice, setPredictedPrice] = useState(null); // State for predicted price\n\n  const handleAddStock = async stockName => {\n    try {\n      // Fetch the new stock data\n      const response = await fetch(`https://hackfin-api.lookaway.dev/data/${stockName}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch data for ${stockName}`);\n      }\n      const result = await response.json();\n      const rawData = result.data;\n\n      // Format the data for the chart\n      const formattedData = Object.entries(rawData).map(([date, values]) => ({\n        date,\n        close: values.close\n      }));\n\n      // Update chart data and stocks state\n      setChartData(formattedData);\n      setStocks(prevStocks => [...prevStocks, {\n        name: stockName,\n        chartData: formattedData\n      }]);\n\n      // Fetch prediction and accuracy data\n      const predictionResponse = await fetch(`https://hackfin-api.lookaway.dev/predict/${stockName}`);\n      if (!predictionResponse.ok) {\n        throw new Error(`Failed to fetch prediction data for ${stockName}`);\n      }\n      const predictionResult = await predictionResponse.json();\n\n      // Update accuracy and predicted price\n      const accuracy = predictionResult.accuracy * 100; // Convert to percentage\n      const predictedPrice = predictionResult.prediction[0]; // Use the first value in the prediction array\n\n      setAccuracyScore(accuracy.toFixed(2)); // Round to the nearest hundredth\n      setPredictedPrice(predictedPrice.toFixed(2)); // Format as dollars and cents\n    } catch (error) {\n      console.error(\"Error fetching stock data or prediction:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Stock Performance Predictor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StockInput, {\n            onAddStock: handleAddStock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), accuracyScore !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Model Accuracy: \", accuracyScore, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), predictedPrice !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Predicted Price in 30 Days: $\", predictedPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/wishlist\",\n            children: \"View Wishlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: chartData.length > 0 ? /*#__PURE__*/_jsxDEV(StockChart, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No chart data available. Please add a stock.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/wishlist\",\n          element: /*#__PURE__*/_jsxDEV(WishlistPage, {\n            stocks: stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"8vHJ0NZFg0c//oEBH8obvgRb7zc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","StockChart","StockInput","WishlistPage","jsxDEV","_jsxDEV","App","_s","chartData","setChartData","stocks","setStocks","accuracyScore","setAccuracyScore","predictedPrice","setPredictedPrice","handleAddStock","stockName","response","fetch","ok","Error","result","json","rawData","data","formattedData","Object","entries","map","date","values","close","prevStocks","name","predictionResponse","predictionResult","accuracy","prediction","toFixed","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onAddStock","to","length","path","element","_c","$RefreshReg$"],"sources":["/Users/ansh/Documents/projects/workspace/personal/asd-1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport StockChart from './components/StockChart'; // Ensure this path is correct\nimport StockInput from './components/StockInput'; // Import your StockInput component\nimport WishlistPage from './components/WishlistPage'; // Import your WishlistPage component\nimport './App.css'; // Import your custom CSS\n\nconst App = () => {\n    const [chartData, setChartData] = useState([]);\n    const [stocks, setStocks] = useState([]); // State for the watchlist\n    const [accuracyScore, setAccuracyScore] = useState(null); // State for accuracy score\n    const [predictedPrice, setPredictedPrice] = useState(null); // State for predicted price\n\n    const handleAddStock = async (stockName) => {\n        try {\n            // Fetch the new stock data\n            const response = await fetch(`https://hackfin-api.lookaway.dev/data/${stockName}`);\n            if (!response.ok) {\n                throw new Error(`Failed to fetch data for ${stockName}`);\n            }\n            const result = await response.json();\n            const rawData = result.data;\n\n            // Format the data for the chart\n            const formattedData = Object.entries(rawData).map(([date, values]) => ({\n                date,\n                close: values.close,\n            }));\n\n            // Update chart data and stocks state\n            setChartData(formattedData);\n            setStocks(prevStocks => [...prevStocks, { name: stockName, chartData: formattedData }]);\n\n            // Fetch prediction and accuracy data\n            const predictionResponse = await fetch(`https://hackfin-api.lookaway.dev/predict/${stockName}`);\n            if (!predictionResponse.ok) {\n                throw new Error(`Failed to fetch prediction data for ${stockName}`);\n            }\n            const predictionResult = await predictionResponse.json();\n\n            // Update accuracy and predicted price\n            const accuracy = predictionResult.accuracy * 100; // Convert to percentage\n            const predictedPrice = predictionResult.prediction[0]; // Use the first value in the prediction array\n\n            setAccuracyScore(accuracy.toFixed(2)); // Round to the nearest hundredth\n            setPredictedPrice(predictedPrice.toFixed(2)); // Format as dollars and cents\n        } catch (error) {\n            console.error(\"Error fetching stock data or prediction:\", error);\n        }\n    };\n\n    return (\n        <Router>\n            <div className=\"container\">\n                <div className=\"content\">\n                    <div className=\"text-section\">\n                        <h1>Stock Performance Predictor</h1>\n                        <StockInput onAddStock={handleAddStock} />\n                        {accuracyScore !== null && (\n                            <h3>Model Accuracy: {accuracyScore}%</h3>\n                        )}\n                        {predictedPrice !== null && (\n                            <h3>Predicted Price in 30 Days: ${predictedPrice}</h3>\n                        )}\n                        <Link to=\"/wishlist\">View Wishlist</Link>\n                    </div>\n                    <div className=\"chart-section\">\n                        {chartData.length > 0 ? (\n                            <StockChart data={chartData} />\n                        ) : (\n                            <p>No chart data available. Please add a stock.</p>\n                        )}\n                    </div>\n                </div>\n                <Routes>\n                    <Route path=\"/wishlist\" element={<WishlistPage stocks={stocks} />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}